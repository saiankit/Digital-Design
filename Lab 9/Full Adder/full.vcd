$date
	Mon Nov  2 14:11:39 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module full_adder_tb $end
$var wire 1 ! sum $end
$var wire 1 " cout $end
$var reg 1 # a $end
$var reg 1 $ b $end
$var reg 1 % cin $end
$scope module dut $end
$var wire 8 & R1 [7:0] $end
$var wire 8 ' R2 [7:0] $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 % cin $end
$var wire 1 ! sum $end
$var wire 1 " cout $end
$scope module m1 $end
$var wire 8 ( I [7:0] $end
$var wire 3 ) S [2:0] $end
$var wire 1 ! Y $end
$upscope $end
$scope module m2 $end
$var wire 8 * I [7:0] $end
$var wire 3 + S [2:0] $end
$var wire 1 " Y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 +
b11101000 *
b0 )
b10010110 (
b11101000 '
b10010110 &
0%
0$
0#
0"
0!
$end
#10
1!
b1 )
b1 +
1%
#20
0%
1!
b10 )
0"
b10 +
1$
#30
0!
b11 )
1"
b11 +
1%
#40
0"
0%
0$
1!
b100 )
b100 +
1#
#50
0!
b101 )
1"
b101 +
1%
#60
0%
0!
b110 )
b110 +
1$
#70
1!
b111 )
b111 +
1%
#80
0"
0%
1!
b100 )
b100 +
0$
